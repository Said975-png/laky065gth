export default async function handler(req, res) {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
  res.setHeader("Access-Control-Allow-Credentials", true);
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader(
    "Access-Control-Allow-Methods",
    "GET,OPTIONS,PATCH,DELETE,POST,PUT",
  );
  res.setHeader(
    "Access-Control-Allow-Headers",
    "X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version",
  );

  if (req.method === "OPTIONS") {
    res.status(200).end();
    return;
  }

  // –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è
  const { url, method } = req;

  try {
    // Ping endpoint
    if (url === "/api/ping" && method === "GET") {
      return res.json({ message: "Hello from Vercel serverless function!" });
    }

    // Groq chat endpoint
    if (url === "/api/groq-chat" && method === "POST") {
      console.log("üìß –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –∫ groq-chat");
      const { messages } = req.body;

      if (!messages || !Array.isArray(messages) || messages.length === 0) {
        console.log("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", messages);
        return res.status(400).json({
          success: false,
          error: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞",
        });
      }

      const groqApiKey = process.env.GROQ_API_KEY;
      if (!groqApiKey) {
        console.log("‚ùå GROQ_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback");

        // Fallback –æ—Ç–≤–µ—Ç
        const lastMessage =
          messages[messages.length - 1]?.content?.toLowerCase() || "";
        let fallbackMessage = "";

        if (
          lastMessage.includes("–ø—Ä–∏–≤–µ—Ç") ||
          lastMessage.includes("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π")
        ) {
          fallbackMessage =
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ü—è—Ç–Ω–∏—Ü–∞, –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?";
        } else if (
          lastMessage.includes("–∫–∞–∫ –¥–µ–ª–∞") ||
          lastMessage.includes("—á—Ç–æ –¥–µ–ª–∞–µ—à—å")
        ) {
          fallbackMessage =
            "ü§ñ –û—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. –û —á–µ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?";
        } else if (
          lastMessage.includes("—á—Ç–æ —É–º–µ–µ—à—å") ||
          lastMessage.includes("—Ñ—É–Ω–∫—Ü–∏–∏")
        ) {
          fallbackMessage =
            "üí° –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å:\n‚Ä¢ –û—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n‚Ä¢ –û–±—â–µ–Ω–∏–µ–º\n‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è–º–∏\n‚Ä¢ –ò –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º!";
        } else if (
          lastMessage.includes("–ø–æ–∫–∞") ||
          lastMessage.includes("–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è")
        ) {
          fallbackMessage =
            "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è. –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞!";
        } else {
          fallbackMessage =
            "ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å —É –º–µ–Ω—è –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º AI —Å–µ—Ä–≤–∏—Å–∞–º, –Ω–æ —è —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —ç—Ç–∏–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!";
        }

        console.log("üí¨ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º fallback –æ—Ç–≤–µ—Ç:", fallbackMessage);
        return res.json({
          success: true,
          message: fallbackMessage,
        });
      }

      // –ó–¥–µ—Å—å –±—ã–ª –±—ã –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GROQ API
      return res.json({
        success: true,
        message: "API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, –Ω–æ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
      });
    }

    // 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    return res.status(404).json({
      success: false,
      error: "Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω",
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ API:", error);
    return res.status(500).json({
      success: false,
      error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
    });
  }
}
